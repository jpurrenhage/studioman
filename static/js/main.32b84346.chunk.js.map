{"version":3,"sources":["Callback/loading.svg","App.js","User/User.js","GraphQL.js","Account/Account.js","Project/Project.js","Home/Home.js","Callback/Callback.js","history.js","Auth/auth0-variables.js","routes.js","Auth/Auth.js","index.js"],"names":["module","exports","__webpack_require__","p","App","route","this","props","history","replace","concat","auth","login","logout","renewSession","localStorage","getItem","isAuthenticated","react_default","a","createElement","es","fluid","Header","Brand","href","bsStyle","className","onClick","goTo","bind","id","Component","Users","react_apollo_esm","query","gql","_templateObject","_ref","loading","error","data","striped","bordered","hover","user","map","key","src","image_url","thumbnail","name","email","status","Accounts","Account_templateObject","variables","userId","account_aggregate","nodes","account","type","Projects","Project_templateObject","accountId","project_aggregate","project","project_customer","start_date","due_date","completion_date","client","ApolloClient","uri","fetchOptions","credentials","request","_request","Object","asyncToGenerator","regenerator_default","mark","_callee","operation","wrap","_context","prev","next","setContext","headers","X-Hasura-Admin-Secret","stop","_x","apply","arguments","Home","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","currentUser","currentAccount","setState","_this2","User","e","setCurrentUser","Account","setCurrentAccount","Project","console","log","style","cursor","Callback","position","display","justifyContent","height","width","top","bottom","left","right","backgroundColor","alt","createHistory","AUTH_CONFIG","domain","clientId","callbackUrl","Auth","auth0","WebAuth","clientID","redirectUri","responseType","scope","handleAuthentication","getAccessToken","getIdToken","authorize","parseHash","err","authResult","accessToken","idToken","setSession","alert","setItem","expiresAt","expiresIn","Date","getTime","checkSession","removeItem","return_to","window","location","origin","routes","Router","Route","path","render","src_App_0","assign","src_Home_Home","test","hash","src_Callback_Callback","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.32b84346.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.c5590569.svg\";","import React, { Component } from 'react';\nimport { Navbar, Button } from 'react-bootstrap';\nimport './App.css';\n\nclass App extends Component {\n  goTo(route) {\n    this.props.history.replace(`/${route}`)\n  }\n\n  login() {\n    this.props.auth.login();\n  }\n\n  logout() {\n    this.props.auth.logout();\n  }\n\n  componentDidMount() {\n    const { renewSession } = this.props.auth;\n\n    if (localStorage.getItem('isLoggedIn') === 'true') {\n      renewSession();\n    }\n  }\n\n  render() {\n    const { isAuthenticated } = this.props.auth;\n\n    return (\n      <div>\n        <Navbar fluid>\n          <Navbar.Header>\n            <Navbar.Brand>\n              <a href=\"/\">StudioMan</a>\n            </Navbar.Brand>\n            <Button\n              bsStyle=\"primary\"\n              className=\"btn-margin\"\n              onClick={this.goTo.bind(this, 'home')}\n            >\n              Home\n            </Button>\n            {\n              !isAuthenticated() && (\n                  <Button\n                    id=\"qsLoginBtn\"\n                    bsStyle=\"primary\"\n                    className=\"btn-margin\"\n                    onClick={this.login.bind(this)}\n                  >\n                    Log In\n                  </Button>\n                )\n            }\n            {\n              isAuthenticated() && (\n                  <Button\n                    id=\"qsLogoutBtn\"\n                    bsStyle=\"primary\"\n                    className=\"btn-margin\"\n                    onClick={this.logout.bind(this)}\n                  >\n                    Log Out\n                  </Button>\n                )\n            }\n          </Navbar.Header>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport { Query } from \"react-apollo\";\nimport {Table, Image} from 'react-bootstrap';\nimport gql from \"graphql-tag\";\nimport {QUERY_GET_USERS} from '../GraphQL';\n\n\nconst Users = ( props ) => (\n  <Query\n    query={gql`${QUERY_GET_USERS}`}\n  >\n    {({ loading, error, data }) => {\n      if (loading) return <p>Loading...</p>;\n      if (error) return <p>Error :(</p>;\n      return (\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th></th>\n              <th>User Name</th>\n              <th>Email</th>\n              <th>Status</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              data.user.map(user => (\n                <tr key={user.id} onClick={props.onClick(user)} >\n                  <td><Image src={user.image_url} thumbnail /></td>\n                  <td>{user.name}</td>\n                  <td>{user.email}</td>\n                  <td>{user.status}</td>\n                </tr>\n              ))\n            }\n          </tbody>\n        </Table>\n      )\n    }}\n  </Query>\n);\n\nexport default Users;\n","const QUERY_GET_USERS = `\nquery {\n  user {\n    id\n    email\n    name\n    status\n    image_url\n  }\n}`;\n\n\nconst QUERY_GET_ACCOUNTS = `\nquery fetch_accountsForUser($userId: Int!) {\n  account_aggregate(\n    where: {user_id: {_eq: $userId} }\n  ) {\n    nodes {\n      id\n      name\n      type\n      status\n    }\n  }\n}`;\n\n\nconst QUERY_GET_PROJECTS = `\nquery fetch_projectsForAccount($accountId: Int!) {\n  project_aggregate(\n    where: {owner_id: {_eq: $accountId}}\n  ) {\n    nodes {\n      id\n      name\n      project_customer {\n        name\n      }\n      type\n      start_date\n      due_date\n      completion_date\n      description\n    }\n  }\n}`;\n\n\nexport {\n  QUERY_GET_USERS,\n  QUERY_GET_ACCOUNTS,\n  QUERY_GET_PROJECTS\n};\n","import React from 'react';\nimport { Query } from \"react-apollo\";\nimport {Table} from 'react-bootstrap';\nimport gql from \"graphql-tag\";\nimport {QUERY_GET_ACCOUNTS} from '../GraphQL';\n\nconst Accounts = (props) => (\n    <Query\n      query={gql`${QUERY_GET_ACCOUNTS}`}\n      variables={{ userId: props.user.id }}\n    >\n      {({ loading, error, data }) => {\n        if (loading) return <p>Loading...</p>;\n        if (error) return <p>Error :(</p>;\n        return (\n          <div>\n            <h4>Accounts for {props.user.name}</h4>\n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  <th>Account Name</th>\n                  <th>Type</th>\n                  <th>Status</th>\n                </tr>\n              </thead>\n              <tbody>\n                {\n                  data.account_aggregate.nodes.map(account => (\n                    <tr key={account.id} onClick={props.onClick(account)} >\n                      <td>{account.name}</td>\n                      <td>{account.type}</td>\n                      <td>{account.status}</td>\n                    </tr>\n                  ))\n                }\n              </tbody>\n            </Table>\n          </div>\n        )\n      }}\n    </Query>\n);\n\nexport default Accounts;\n","import React from 'react';\nimport { Query } from \"react-apollo\";\nimport {Table} from 'react-bootstrap';\nimport gql from \"graphql-tag\";\nimport {QUERY_GET_PROJECTS} from '../GraphQL';\n\nconst Projects = (props) => (\n    <Query\n      query={gql`${QUERY_GET_PROJECTS}`}\n      variables={{ accountId: props.account.id }}\n    >\n      {({ loading, error, data }) => {\n        if (loading) return <p>Loading...</p>;\n        if (error) return <p>Error :(</p>;\n        return (\n          <div>\n            <h4>Projects for Account {props.account.name}</h4>\n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  <th>Project Name</th>\n                  <th>Customer</th>\n                  <th>Type</th>\n                  <th>Start Date</th>\n                  <th>Due Date</th>\n                  <th>Completion Date</th>\n                </tr>\n              </thead>\n              <tbody>\n                {\n                  data.project_aggregate.nodes.map(project => (\n                    <tr key={project.id} onClick={props.onClick(project)} >\n                      <td>{project.name}</td>\n                      <td>{project.project_customer.name}</td>\n                      <td>{project.type}</td>\n                      <td>{project.start_date}</td>\n                      <td>{project.due_date}</td>\n                      <td>{project.completion_date}</td>\n                    </tr>\n                  ))\n                }\n              </tbody>\n            </Table>\n          </div>\n        )\n      }}\n    </Query>\n);\n\nexport default Projects;\n","import React, { Component } from 'react';\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport Users from '../User/User';\nimport Accounts from '../Account/Account';\nimport Projects from '../Project/Project';\n\nconst client = new ApolloClient({\n  uri: \"https://artemis.onlinebands.com/v1alpha1/graphql\",\n  fetchOptions: {\n    credentials: 'include'\n  },\n  request: async (operation) => {\n    const token = 'artemis-audio-database';\n    operation.setContext({\n      headers: {\n        'X-Hasura-Admin-Secret': token\n      }\n    })\n  }\n});\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {currentUser: null, currentAccount: null};\n  }\n  setCurrentUser(user) {\n    this.setState({currentUser: user, currentAccount: null});\n  }\n  setCurrentAccount(account) {\n    this.setState({currentAccount: account});\n  }\n  login() {\n    this.props.auth.login();\n  }\n  render() {\n    const { isAuthenticated } = this.props.auth;\n    return (\n      <div className=\"container\">\n        {\n          isAuthenticated() && (\n              <div className=\"container\">\n                <ApolloProvider client={client}>\n                  <div>\n                    <h2>StudioMan</h2>\n                    <Users onClick={(user) => (e) => this.setCurrentUser(user)} />\n                    { this.state.currentUser && (\n                      <Accounts\n                        user={this.state.currentUser}\n                        onClick={(account) => (e) => this.setCurrentAccount(account)}\n                      />\n                      )\n                    }\n                    { this.state.currentAccount && (\n                      <Projects\n                        account={this.state.currentAccount}\n                        onClick={(project) => (e) => console.log('clicked project:', project)}\n                      />\n                      )\n                    }\n                  </div>\n                </ApolloProvider>\n              </div>\n          )\n        }\n        {\n          !isAuthenticated() && (\n              <h4>\n                You are not logged in! Please{' '}\n                <button\n                  style={{ cursor: 'pointer' }}\n                  onClick={this.login.bind(this)}\n                >\n                  Log In\n                </button>\n                {' '}to continue.\n              </h4>\n            )\n        }\n      </div>\n    );\n  }\n}\n\n\nexport default Home;\n","import React, { Component } from 'react';\nimport loading from './loading.svg';\n\nclass Callback extends Component {\n  render() {\n    console.log('callback...');\n    const style = {\n      position: 'absolute',\n      display: 'flex',\n      justifyContent: 'center',\n      height: '100vh',\n      width: '100vw',\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div style={style}>\n        <img src={loading} alt=\"loading\"/>\n      </div>\n    );\n  }\n}\n\nexport default Callback;\n","import createHistory from 'history/createBrowserHistory'\n\nexport default createHistory()\n","export const AUTH_CONFIG = {\n  domain: 'studioman.auth0.com',\n  clientId: 'kbHqtaePCSGY2WdQYpM1H4g425JxR1UQ',\n  callbackUrl: 'https://jpurrenhage.github.io/studioman/callback'\n}\n","import React from 'react';\nimport { Route, Router } from 'react-router-dom';\nimport App from './App';\nimport Home from './Home/Home';\nimport Callback from './Callback/Callback';\nimport Auth from './Auth/Auth';\nimport history from './history';\n\nconst auth = new Auth();\n\nconst handleAuthentication = ({location}) => {\n  if (/access_token|id_token|error/.test(location.hash)) {\n    auth.handleAuthentication();\n  }\n}\n\nexport const makeMainRoutes = () => {\n  return (\n      <Router history={history}>\n        <div>\n          <Route path=\"/\" render={(props) => <App auth={auth} {...props} />} />\n          <Route path=\"/home\" render={(props) => <Home auth={auth} {...props} />} />\n          <Route path=\"/callback\" render={(props) => {\n              console.log('callback called: ', props);\n            handleAuthentication(props);\n            return <Callback {...props} />\n          }}/>\n        </div>\n      </Router>\n  );\n}\n","import history from '../history';\nimport auth0 from 'auth0-js';\nimport { AUTH_CONFIG_DEV } from './auth0-variables-dev';\nimport { AUTH_CONFIG } from './auth0-variables';\n\nexport default class Auth {\n  accessToken;\n  idToken;\n  expiresAt;\n\n  auth0 = new auth0.WebAuth({\n    domain: AUTH_CONFIG.domain,\n    clientID: AUTH_CONFIG.clientId,\n    redirectUri: process.env.NODE_ENV === 'development' ? AUTH_CONFIG_DEV.callbackUrl : AUTH_CONFIG.callbackUrl,\n    responseType: 'token id_token',\n    scope: 'openid'\n  });\n\n  constructor() {\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleAuthentication = this.handleAuthentication.bind(this);\n    this.isAuthenticated = this.isAuthenticated.bind(this);\n    this.getAccessToken = this.getAccessToken.bind(this);\n    this.getIdToken = this.getIdToken.bind(this);\n    this.renewSession = this.renewSession.bind(this);\n  }\n\n  login() {\n    this.auth0.authorize();\n  }\n\n  handleAuthentication() {\n    this.auth0.parseHash((err, authResult) => {\n      console.log('handleAuthentication() ', authResult);\n      if (authResult && authResult.accessToken && authResult.idToken) {\n        this.setSession(authResult);\n      } else if (err) {\n        history.replace('/home');\n        console.log(err);\n        alert(`Error: ${err.error}. Check the console for further details.`);\n      }\n    });\n  }\n\n  getAccessToken() {\n    return this.accessToken;\n  }\n\n  getIdToken() {\n    return this.idToken;\n  }\n\n  setSession(authResult) {\n    // Set isLoggedIn flag in localStorage\n    localStorage.setItem('isLoggedIn', 'true');\n\n    // Set the time that the access token will expire at\n    let expiresAt = (authResult.expiresIn * 1000) + new Date().getTime();\n    this.accessToken = authResult.accessToken;\n    this.idToken = authResult.idToken;\n    this.expiresAt = expiresAt;\n\n    // navigate to the home route\n    history.replace('/home');\n  }\n\n  renewSession() {\n    this.auth0.checkSession({}, (err, authResult) => {\n       if (authResult && authResult.accessToken && authResult.idToken) {\n         this.setSession(authResult);\n       } else if (err) {\n         this.logout();\n         console.log(err);\n         // alert(`Could not get a new token (${err.error}: ${err.error_description}).`);\n       }\n    });\n  }\n\n  logout() {\n    // Remove tokens and expiry time\n    this.accessToken = null;\n    this.idToken = null;\n    this.expiresAt = 0;\n\n    // Remove isLoggedIn flag from localStorage\n    localStorage.removeItem('isLoggedIn');\n\n    this.auth0.logout({\n      return_to: window.location.origin\n    });\n\n    // navigate to the home route\n    history.replace('/home');\n  }\n\n  isAuthenticated() {\n    // Check whether the current time is past the\n    // access token's expiry time\n    let expiresAt = this.expiresAt;\n    return new Date().getTime() < expiresAt;\n  }\n}\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { makeMainRoutes } from './routes';\n\nconst routes = makeMainRoutes();\n\nReactDOM.render(\n  routes,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}